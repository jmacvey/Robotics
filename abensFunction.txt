void findFirstLastFreqMaxMin(int target, int& first, int& last, int& freq, 
		int& max, int& min, const string& pathToFile) {

			// open a file stream to the path specified
			ifstream f(pathToFile);
			if (!f.good()) 
				return; // bad file name

			// counter holds the current index into the file
			// value will be the value of the integer at the current index
			// found is whether or not we have found the target
			int counter = 0, value = 0; bool found = false;

			// initialize max and min values to the first integer and check the flag
			max = min = f.get();
			counter++; 
			if (max == target) // special case (the first value is the target
				{ freq++; last = 0; first = 0; found = true; }

			while (f.good()) { // while the file is good (i.e. not corrupt or at end)
				if ((value = fstream.get() - '0') == target) { // we've found the target
					freq++;
					first = found ? first : counter; // first occurence if it isn't found, else it's just itself
					found = true; // set the found flag so that first occurence will not change 
					last = counter;
				} // end if
				max = value > max ? value : max;
				min = value < min ? value : min;
				counter++; // increment counter to keep track of index into the array
				
			} // end while

} // end function

 